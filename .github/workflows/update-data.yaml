name: "Update database from JSON changes"
on:
  push:
    branches:
      - main
    paths:
      - "json/*.json"
      - "usages/**/*.json"

env:
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH connection
        run: >
          echo "${{ secrets.PRIVATE_KEY }}" > ./private_key && chmod 600 ./private_key &&
          echo '#!/bin/sh' >> ./passphrase_script.sh &&
          echo "echo ${{ secrets.PASSPHRASE }}" >> ./passphrase_script.sh &&
          chmod +x ./passphrase_script.sh

      - run: ssh-agent -a $SSH_AUTH_SOCK > /dev/null
      - run: DISPLAY=1 SSH_ASKPASS="./passphrase_script.sh" ssh-add ./private_key < /dev/null

      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2 # will create filters for changed files
        id: filter-json-data
        with:
          filters: >
            natures:
              - 'json/natures.json'
            types:
              - 'json/types.json'
            abilities:
              - 'json/abilities.json'
            items:
              - 'json/items.json'
            moves:
              - 'json/moves.json'
            pokemon:
              - 'json/pokemons.json'
            learns:
              - 'json/learns.json'
            pokemon_tiers:
              - 'json/pokemonTier.json'
            usages:
              - 'usages/**/*.json'
            guide_tags:
             - 'json/guide_tags.json'
            actuality_tags:
             - 'json/actuality_tags.json'
            tournament_tags:
             - 'json/tournament_tags.json'
            video_tags:
             - 'json/video_tags.json'

      - name: Update tags
        if: steps.filter-json-data.outputs.tags == 'true'
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importTags.js"

      - name: Update tiers
        if: steps.filter-json-data.outputs.tiers == 'true'
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importTiers.js"

      - name: Update natures
        if: steps.filter-json-data.outputs.natures == 'true'
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importNatures.js"

      - name: Update types
        if: steps.filter-json-data.outputs.types == 'true'
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importTypes.js"

      - name: Update abilities
        if: steps.filter-json-data.outputs.abilities == 'true'
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importAbilities.js"

      - name: Update items
        if: steps.filter-json-data.outputs.items == 'true'
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importItems.js"

      - name: Update moves
        if: steps.filter-json-data.outputs.moves == 'true'
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importMoves.js"

      - name: Update pokemons
        if: steps.filter-json-data.outputs.pokemon == 'true'
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importPokemon.js"

      - name: Update learns
        if: steps.filter-json-data.outputs.learns == 'true'
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importPokemonMoves.js"

      - name: Update pokemon tiers
        if: steps.filter-json-data.outputs.pokemon_tiers == 'true'
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importPokemonTier.js"

      - name: Update usages
        if: steps.filter-json-data.outputs.usages == 'true'
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importUsages.js &&
           nq -c node db/importUsagesVGC.js"
