name: "Update JSON files and database (production)"

on: # This workflow must be triggered on two conditions
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch: # when we ask it manually (through the Actions UI or the GitHub API)

env:
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock

jobs: #this section contains the tasks / jobs that must be executed
  update_json_files: # the job name
    runs-on: "ubuntu-latest" # this job must run on a Ubuntu container
    environment: production
    env:
      LAST_GEN: 9
    steps:
      - name: set timezone
        uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Europe/Paris"
      - name: checkout on main
        uses: actions/checkout@main # action that makes a checkout
        with:
          ref: ${{ github.read_ref }} # will checkout on th desired branch

      - name: "NodeJS setup"
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Update pokemon-showdown data
        run: npm ci && npm run clone-showdown

      - name: Update pokemons' usages
        run: USAGE_PATH='usages' npm run generate-stats

      - name: Store last hash commit
        run: echo "old_hash=$(git log -n 1 --pretty=format:"%H")" >> $GITHUB_ENV

      - name: Commit differences # commit if differences are tracked after updates (previous step)
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add json usages
          git diff --staged --quiet || git commit -am "JSON files updated" && git push https://ii02735:${{ secrets.GITHUB_TOKEN }}@github.com/ii02735/dataprovider-pokemon-showdown.git main
          echo "new_hash=$(git log -n 1 --pretty=format:"%H")" >> $GITHUB_ENV

      - name: Setup SSH connection
        if: env.old_hash != env.new_hash
        run: >
          echo "${{ secrets.PRIVATE_KEY }}" > ./private_key && chmod 600 ./private_key &&
          echo '#!/bin/sh' >> ./passphrase_script.sh &&
          echo "echo ${{ secrets.PASSPHRASE }}" >> ./passphrase_script.sh &&
          chmod +x ./passphrase_script.sh

      - if: env.old_hash != env.new_hash
        run: ssh-agent -a $SSH_AUTH_SOCK > /dev/null

      - if: env.old_hash != env.new_hash
        run: DISPLAY=1 SSH_ASKPASS="./passphrase_script.sh" ssh-add ./private_key < /dev/null

      - name: "Update remote"
        if: env.old_hash != env.new_hash
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no
          "cd ${{ secrets.REMOTE_PATH }}/ && 
           git pull https://ii02735:${{ secrets.GITHUB_TOKEN }}@github.com/ii02735/dataprovider-pokemon-showdown.git main"

      - name: Update tags
        if: env.old_hash != env.new_hash
        run: >
          git diff HEAD HEAD^ --name-only | grep "tags.json" --quiet &&
          (ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importTags.js") || echo "No changes for tags.json"

      - name: Update tiers
        if: env.old_hash != env.new_hash
        run: >
          git diff HEAD HEAD^ --name-only | grep "tiers.json" --quiet &&
          (ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importTiers.js") || echo "No changes for tiers.json"

      - name: Update natures
        if: env.old_hash != env.new_hash
        run: >
          git diff HEAD HEAD^ --name-only | grep "natures.json" --quiet &&
          (ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importNatures.js") || echo "No changes for natures.json"

      - name: Update types
        if: env.old_hash != env.new_hash
        run: >
          git diff HEAD HEAD^ --name-only | grep "types.json" --quiet &&
          (ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importTypes.js") || echo "No changes for types.json"

      - name: Update abilities
        if: env.old_hash != env.new_hash
        run: >
          git diff HEAD HEAD^ --name-only | grep "abilities.json" --quiet &&
          (ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importAbilities.js") || echo "No changes for abilities.json"

      - name: Update items
        if: env.old_hash != env.new_hash
        run: >
          git diff HEAD HEAD^ --name-only | grep "items.json" --quiet && 
          (ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importItems.js") || echo "No changes for items.json"

      - name: Update moves
        if: env.old_hash != env.new_hash
        run: >
          git diff HEAD HEAD^ --name-only | grep "moves.json" && 
          (ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importMoves.js") || echo "No changes for moves.json"

      - name: Update pokemons
        if: env.old_hash != env.new_hash
        run: >
          git diff HEAD HEAD^ --name-only | grep "pokemons.json" --quiet && 
          (ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importPokemon.js") || echo "No changes for pokemons.json"

      - name: Update learns
        if: env.old_hash != env.new_hash
        run: >
          git diff HEAD HEAD^ --name-only | grep "learns.json" --quiet && 
          (ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importPokemonMoves.js") || echo "No changes for learns.json"

      - name: Update pokemon tiers
        if: env.old_hash != env.new_hash
        run: >
          git diff HEAD HEAD^ --name-only | grep "pokemonTier.json" --quiet &&
          (ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importPokemonTier.js") || echo "No changes for pokemons.json"

      - name: Update usages
        if: env.old_hash != env.new_hash
        run: >
          git diff HEAD HEAD^ --name-only | grep "usages" --quiet &&
          (ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c node db/importUsages.js &&
           nq -c node db/importUsagesVGC.js") || echo "No changes for usages"
