name: "Update JSON files and database (develop)"

on: # This workflow must be triggered on two conditions
  workflow_dispatch: # when we ask it manually (through the Actions UI or the GitHub API)

env:
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock
  POKEMON_SHOWDOWN_REPO: src/pokemon-showdown

jobs: #this section contains the tasks / jobs that must be executed
  update_json_files: # the job name
    runs-on: "ubuntu-latest" # this job must run on a Ubuntu container
    environment: development
    env:
      LAST_GEN: 8
    steps:
      - name: set timezone
        uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Europe/Paris"
      - name: checkout on main
        uses: actions/checkout@main # action that makes a checkout
        with:
          ref: ${{ github.read_ref }} # will checkout on th desired branch

      - name: "NodeJS setup"
        uses: actions/setup-node@v2
        with:
          node-version: "12"

      - name: Update pokemon-showdown data
        run: npm ci && npm run clone-showdown

      - name: Update pokemons' usages
        run: USAGE_PATH='usages' npm run generate-stats

      - name: Store last hash commit
        run: echo "old_hash=$(git log -n 1 --pretty=format:"%H")" >> $GITHUB_ENV

      - name: Commit differences # commit if differences are tracked after updates (previous step)
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git diff --quiet && git diff --staged --quiet || git commit -am "JSON files updated" && git push https://ii02735:${{ secrets.GITHUB_TOKEN }}@github.com/ii02735/dataprovider-pokemon-showdown.git develop
          echo "new_hash=$(git log -n 1 --pretty=format:"%H")" >> $GITHUB_ENV

      - name: Setup SSH connection
        if: env.old_hash != env.new_hash
        run: >
          echo "${{ secrets.PRIVATE_KEY }}" > ./private_key && chmod 600 ./private_key &&
          echo '#!/bin/sh' >> ./passphrase_script.sh &&
          echo "echo ${{ secrets.PASSPHRASE }}" >> ./passphrase_script.sh &&
          chmod +x ./passphrase_script.sh

      - if: env.old_hash != env.new_hash
        run: ssh-agent -a $SSH_AUTH_SOCK > /dev/null

      - if: env.old_hash != env.new_hash
        run: DISPLAY=1 SSH_ASKPASS="./passphrase_script.sh" ssh-add ./private_key < /dev/null

      - name: "Update remote"
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no
          "cd ${{ secrets.REMOTE_PATH }}/ && 
           git pull https://ii02735:${{ secrets.GITHUB_TOKEN }}@github.com/ii02735/dataprovider-pokemon-showdown.git main"

      - uses: actions/checkout@v2

      - name: Update tags
        if: "${{ github.event.inputs.entity == 'tags' || github.event.inputs.entity == 'all' }}"
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c ./bin/cli.js --entity=tags"

      - name: Update tiers
        if: "${{ github.event.inputs.entity == 'tiers' || github.event.inputs.entity == 'all' }}"
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c ./bin/cli.js --entity=tiers"

      - name: Update natures
        if: "${{ github.event.inputs.entity == 'natures' || github.event.inputs.entity == 'all' }}"
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c ./bin/cli.js --entity=natures"

      - name: Update types
        if: "${{ github.event.inputs.entity == 'types' || github.event.inputs.entity == 'all' }}"
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c ./bin/cli.js --entity=types"

      - name: Update abilities
        if: "${{ github.event.inputs.entity == 'abilities' || github.event.inputs.entity == 'all' }}"
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c ./bin/cli.js --entity=abilities"

      - name: Update items
        if: "${{ github.event.inputs.entity == 'items' || github.event.inputs.entity == 'all' }}"
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c ./bin/cli.js --entity=items"

      - name: Update moves
        if: "${{ github.event.inputs.entity == 'moves' || github.event.inputs.entity == 'all' }}"
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c ./bin/cli.js --entity=moves"

      - name: Update pokemon
        if: "${{ github.event.inputs.entity == 'pokemon' || github.event.inputs.entity == 'all' }}"
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c ./bin/cli.js --entity=pokemon"

      - name: Update learns
        if: "${{ github.event.inputs.entity == 'learns' || github.event.inputs.entity == 'all' }}"
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c ./bin/cli.js --entity=learns"

      - name: Update pokemon tiers
        if: "${{ github.event.inputs.entity == 'pokemon tiers' || github.event.inputs.entity == 'all' }}"
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c ./bin/cli.js --entity=pokemonTier"

      - name: Update usages
        if: "${{ github.event.inputs.entity == 'usages' || github.event.inputs.entity == 'all' }}"
        run: >
          ssh -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} -o StrictHostKeyChecking=no 
          "cd ${{ secrets.REMOTE_PATH }} &&
           nq -c ./bin/cli.js --entity=usages &&
           nq -c ./bin/cli.js --entity=vgc_usages"
